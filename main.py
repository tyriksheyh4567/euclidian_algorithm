'''
Программа вычисляет НОД и НОК двух чисел через алгоритм Евклида (самый медленный вариант :)). Знаю, что есть встроенная функция, но почему бы не попробовать сделать свою?
'''
import os
import ctypes
ctypes.windll.kernel32.SetConsoleTitleW("Вычисление НОД и НОК двух чисел через алгоритм Евклида")
amogus = 'y' #SUS!.. А если серьезно, то это проверка на выход из цикла
while amogus == 'y': #цикл
    error = True
    while error != False: #цикл обработки ошибок (если пользователь ввел не целое число, или ввёл НЕ число)
        try:
            a = int(input('Введите 1-ое число: ')) #первое число
            error = False
            b = int(input('Введите 2-ое число: ')) #второе число
            error = False
        except ValueError:
            print('Некорректный ввод. Повторите попытку и введите целое число.')
            error = True
    def get_nod(a, b):
        '''
        Функция вычисляет НОД двух чисел
        '''
        while a != b:
            if a > b:
                a -= b
            else:
                b -= a
        return a
    def get_nok(a,b):
        '''
        Функция вычисляет НОК двух чисел, используя функцию для вычисления НОД
        '''
        temp = get_nod(a,b)
        return a*b//temp

    c = input('НОД или НОК? ') #выбор
    c = c.upper() #приведение к верхнему регистру
    if c == 'НОД':
        print(f'НОД {a} и {b} равен {get_nod(a, b)}.') #вывод НОД
    else:
        print(f'НОК {a} и {b} равно {get_nok(a, b)}.') #вывод НОК
    amogus = input('Продолжить? (да/нет или y/n) ') #проверка на выход из цикла
    amogus = amogus.lower() #приведение к нижнему регистру
    if amogus == 'да': #проверка на слово "да"
        amogus = 'y'
    elif amogus == 'нет': #проверка на слово "нет"
        amogus = 'n'
print('Работа программы завершена. До свидания!')
os.system('pause') #ожидание нажатия любой клавиши для завершения программы
